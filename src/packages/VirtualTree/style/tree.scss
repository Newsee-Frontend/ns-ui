@import 'mixins/mixins';
@import 'common/var';
@import 'common/transition';
@import 'checkbox';

.el-tree.ns-virtual-tree {
  font-size: 13px;

  @include b(tree) {
    position: relative;
    cursor: default;
    background: $--color-white;
    color: $--tree-font-color;
    @include e(empty-block) {
      position: relative;
      min-height: 60px;
      text-align: center;
      width: 100%;
      height: 100%;
    }
    @include e(empty-text) {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      color: $--color-text-secondary;
      font-size: $--font-size-base;
    }
    @include e(drop-indicator) {
      position: absolute;
      left: 0;
      right: 0;
      height: 1px;
      background-color: $--color-primary;
    }
  }

  @include b(tree-node) {
    white-space: nowrap;
    outline: none;
    .element-tree-node-label-wrapper {
      padding: 4px;
      border-radius: 4px;
    }

    &:not(.is-showChecked) .el-tree-node__content {
      &:hover {
        background-color: transparent;
      }
      > .element-tree-node-label-wrapper:hover {
        background-color: $--background-color;
      }

      > svg,
      > i {
        flex: 0 0 14px;
      }
    }

    &:focus {
      > .el-tree-node__content {
        background-color: transparent;
      }
    }
    &.is-current:not(.is-showChecked) {
      /* focus */
      > .el-tree-node__content {
        background-color: transparent;

        > .element-tree-node-label-wrapper {
          background-color: $--background-color;
        }
      }
    }
    @include when(drop-inner) {
      > .el-tree-node__content .el-tree-node__label {
        background-color: $--color-primary;
        color: #fff;
      }
    }
    @include e(content) {
      display: flex;
      align-items: center;
      cursor: pointer;
      & > .el-tree-node__expand-icon {
        padding: 6px;
      }
      & > label.el-checkbox {
        margin-right: 8px;
      }
      .el-tree.is-dragging & {
        cursor: move;
        & * {
          pointer-events: none;
        }
      }
      .el-tree.is-dragging.is-drop-not-allow & {
        cursor: not-allowed;
      }
    }
    @include e(expand-icon) {
      cursor: pointer;
      color: $--tree-expand-icon-color;
      font-size: 12px;
      transform: rotate(0deg);
      transition: transform 0.3s ease-in-out;
      &.expanded {
        transform: rotate(90deg);
      }
      &-no-transition {
        transition: none;
      }
      &.is-leaf {
        color: transparent;
        cursor: default;
      }
    }
    @include e(label) {
      font-size: $--font-size-base;
    }
    @include e(loading-icon) {
      margin-right: 8px;
      font-size: $--font-size-base;
      color: $--tree-expand-icon-color;
    }
    & > .el-tree-node__children {
      overflow: hidden;
      background-color: transparent;
    }
    &.is-expanded > .el-tree-node__children {
      display: block;
    }
  }

  .el-tree--highlight-current .el-tree-node.is-current > .el-tree-node__content {
    background-color: mix($--color-white, $--color-primary, 92%);
  }

  .vue-recycle-scroller.ready.direction-vertical {
    .vue-recycle-scroller__item-wrapper {
      width: unset;
      overflow: unset;
    }
  }
}
